# -*-Mode: tcl -*-

# =============================================================================
# lex.tmk
# (C)opyright 1999 by Hartmut Schirmacher (hartmut@acm.org)
# =============================================================================
# $Id: yacc.tmk,v 1.17 2002/07/30 09:55:26 brabec Exp $
# =============================================================================
# $Log: yacc.tmk,v $
# Revision 1.17  2002/07/30 09:55:26  brabec
# *** empty log message ***
#
# Revision 1.16  2001/12/05 10:19:31  brabec
# *** empty log message ***
#
# Revision 1.15  2001/11/22 12:47:51  brabec
# blablub VisualC++ changes
#
# Revision 1.14  2001/11/22 09:32:25  brabec
# *** empty log message ***
#
# Revision 1.13  2001/10/29 23:35:21  brabec
# fixed lex and yacc configuration
#
# Revision 1.12  2001/05/29 14:14:13  brabec
# fixed YACC variable
#
# Revision 1.11  2001/04/26 19:36:47  brabec
# fixes for cygwin/vc port
#
# Revision 1.10  2001/04/25 15:10:04  brabec
# *** empty log message ***
#
# Revision 1.9  2001/04/24 13:09:34  brabec
# *** empty log message ***
#
# Revision 1.7  2001/04/05 16:08:47  brabec
# fixed lex and yacc stuff
#
# Revision 1.6  2000/08/30 12:55:04  htschirm
# windows file names port
#
# Revision 1.5  2000/07/20 16:15:57  htschirm
# towards tmk release 0.9
#
# Revision 1.4  2000/04/20 11:38:01  htschirm
# lots of new names
#
# Revision 1.3  1999/12/05 21:55:17  htschirm
# reasonable dependency handling; fixed EXCLUDE; PROJ_LOCATIONS support
#
# Revision 1.2  1999/09/24 07:42:08  htschirm
# Name change.
#
# Revision 1.1  1999/06/09 12:03:15  ag4-adm
# Initial version for dear Hendrik
#
# =============================================================================

# special for yacc:
# the input file is parsed if TMK_YACC_PREFIX="prefix" appears somewhere,
# if so we set the name prefix, otherwise 'yy' is used.
# example:  /* TMK_YACC_PREFIX="rc10_" */

# executable and options
variable FLAGS
lappend FLAGS "-d"



if { ! [info exists ::yacc::YACC] } {
    if $::__IsCygwinSystem  {
	foreach i { /bin /usr/bin /usr/local/bin } {
	    if [file executable $i/bison ] {
		set ::yacc::YACC [exec cygpath.exe -w $i/bison]
		break
	    }
	}
    } else {
	if { $OSCLASS eq $::STR_UNIX} {
	    set ::yacc::YACC [exec which bison]
	} else {
	     exit_msg "please specify yacc/bison in the tmk config (::yacc::YACC) !"
	}
    }
}
lappend FLAGS "-y"


if [info exists ::yacc::BISON_SIMPLE] {
    set env(BISON_SIMPLE) $::yacc::BISON_SIMPLE
}
if [info exists ::yacc::BISON_HAIRY] {
    set env(BISON_HAIRY) $::yacc::BISON_HAIRY
}

# suffixes and target language choice (C or C++)
set_ifndef SUFFIX .y
set_ifndef SUFFIX_H   .h
set_ifndef SUFFIX_C   .c
set_ifndef SUFFIX_CXX .cc
set_ifndef LANGUAGE   cxx

# how to get a C/C++ file from a yacc file
target [list *$::yacc::SUFFIX_CXX *$::yacc::SUFFIX_C] \$\{ROOT\}$::yacc::SUFFIX {
    
    read_file $SRC _tmpyacc
    if [regexp "TMK_YACC_PREFIX=\"\(\[^\"]+\)\"" $_tmpyacc _a b] {
	set ::yacc::tmp_suffix "-p $b"
    } else {
	set ::yacc::tmp_suffix ""
    }
    unset _tmpyacc

    eval [list cmd ${::yacc::YACC} {*}$yacc::FLAGS $yacc::tmp_suffix \
		-o $TARGET $SRC]

    # check for header files -- maybe different for bison 1.30 and 1.28
    if [file exists $TARGET.h] {
	file copy -force -- $TARGET.h $ROOT$yacc::SUFFIX_H
	file delete -force -- $TARGET.h
    }
    if [file exists [file rootname $TARGET].hh] {
	catch { file delete [file rootname $TARGET].h }
	file rename [file rootname $TARGET].hh [file rootname $TARGET].h
    }	
}

eval_later {

    # must also load a language module, e.g. cxx or c
    if {![lcontains $::MODULES $yacc::LANGUAGE]} {
	exit_msg "yacc: language module $LANGUAGE not loaded"
    }

    # generate object files from the generated source files
    foreach f [glob -nocomplain *$yacc::SUFFIX] {
	set varname SUFFIX_[string toupper $LANGUAGE]
	if {[info vars $varname] eq {}} {
	    exit_msg "yacc: suffix for language $LANGUAGE not defined"
	}
	eval set t [file rootname $f]\$$varname
	${LANGUAGE}::make_obj $t
    }
}

