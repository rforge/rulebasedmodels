# ========================================================================
# $Id: grep.tmk,v 1.5 2000/07/20 16:15:57 htschirm Exp $
# ========================================================================
# tcl implementation of grep 
# ========================================================================
# $Log: grep.tmk,v $
# Revision 1.5  2000/07/20 16:15:57  htschirm
# towards tmk release 0.9
#
# Revision 1.4  2000/04/22 17:59:10  ag4-adm
# *** empty log message ***
#
# Revision 1.3  2000/04/22 17:53:25  ag4-adm
# extended syntax to take lists of filenames
#
# Revision 1.2  2000/04/20 11:38:00  htschirm
# lots of new names
#
# Revision 1.1  2000/02/25 10:11:23  brabec
# grep module
# 
# ========================================================================


# grep:
# usage is 'grep [--files] pattern { list of files }
proc ::grep args {
    set grep_usage \
	    "usage is 'grep \-\-files pattern file-list1 ?file-list2 ...?<\n\
	      \-\-files:  only show matched file names."

    set files      0
    set inputfiles {}
    set pattern    ""
    
    foreach i $args {

	if [regexp \\\-\\\-\[a-z\]\+ $i ""] {
	    
	    if { $pattern != "" } {
		exit_msg "invalid switch $i \n $grep_usage"
	    }
	    if { $i == "\-\-files" } {
		set files 1
		continue
	    }
	} else {
	    if { $pattern == "" } {
		set pattern $i
		continue
	    } else {
		set inputfiles [list {*}$inputfiles {*}$i]
	    }
	}
    }   
    if { $inputfiles == {} } {
	return ""
    }

    if { $pattern == "" } {
	exit_msg "no grep pattern given !\n $grep_usage"
    }

    set result {}

    foreach fname $inputfiles {
	if [file readable $fname] {
	    set ifile [open $fname "r"] 
	    while { ! [eof $ifile] } {
		gets $ifile l
		if [regexp $pattern $l] {
		    if $files {
			lappend result $fname 
			break
		    } else {
			lappend result $l
		    }
		}
	    }
	    close $ifile
	}
    }
    return $result
}
