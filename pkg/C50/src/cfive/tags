AExpression	implicitatt.c	/^Boolean AExpression()$/
ALLOCTABLES	defns.i	231
ATTP	modelfiles.c	74
Active	classify.c	41
AddBlock	subset.c	/^void AddBlock(DiscrValue V1, DiscrValue V2)$/
AddOps	implicitatt.c	317
AddToList	formrules.c	/^void AddToList(CaseNo *List, CaseNo N)$/
AdjustAllThresholds	contin.c	/^void AdjustAllThresholds(Tree T)$/
AdjustThresholds	contin.c	/^void AdjustThresholds(Tree T, Attribute Att, CaseN/
Alloc	defns.i	/^#define  Alloc(N,T)		AllocZero(N,T) \/* for safety /
AllocZero	defns.i	/^#define  AllocZero(N,T)		(T *) Pcalloc(N, sizeof(T/
Allocated	utility.c	193
AltRandom	defns.i	86
AltSeed	defns.i	/^#define	AltSeed(x)		srand48(x)$/
Append	implicitatt.c	/^void Append(char c)$/
ApplicCases	defns.i	377
AsciiOut	modelfiles.c	/^void AsciiOut(String Pre, String S)$/
Atom	implicitatt.c	/^Boolean Atom()$/
AttDef	global.c	98
AttDefUses	global.c	99
AttImp	attwinnow.c	38
AttTestBits	global.c	185
AttValues	global.c	187
Attribute	defns.i	251
AvCWt	global.c	75
AvGainWt	formtree.c	41
BADATTNAME	defns.i	191
BADATTVAL	defns.i	194
BADCLASS	defns.i	196
BADCLASSTHRESH	defns.i	189
BADCOST	defns.i	198
BADCOSTCLASS	defns.i	197
BADCTARGET	defns.i	203
BADDATE	defns.i	208
BADDEF1	defns.i	213
BADDEF2	defns.i	214
BADDEF3	defns.i	215
BADDEF4	defns.i	216
BADDISCRETE	defns.i	201
BADDTARGET	defns.i	204
BADNUMBER	defns.i	195
BADTIME	defns.i	209
BADTSTMP	defns.i	210
BN	implicitatt.c	41
Bar	global.c	151
BaseInfo	defns.i	381
Before	defns.i	/^#define  Before(n1,n2)  (n1->Tested < n2->Tested |/
Bell	global.c	154
Bit	defns.i	/^#define	 Bit(b)			(1 << (b))$/
Blocked	xval.c	38
Blocks	defns.i	393
Boolean	defns.i	243
Boost	report.c	41
BoostClassify	classify.c	/^ClassNo BoostClassify(DataRec Case, int MaxTrial)$/
BrDiscr	defns.i	127
BrSubset	defns.i	129
BrThresh	defns.i	128
Branch	defns.i	366
Branch	defns.i	439
BranchBits	global.c	186
BranchType	defns.i	243
Buff	implicitatt.c	40
BuffSize	implicitatt.c	41
Byte	defns.i	243
Bytes	defns.i	394
C	defns.i	328
C1	implicitatt.c	/^#define	C1(x)	(CUNA(XSN-1) ? _UNK.cval : (x))$/
C2	implicitatt.c	/^#define	C2(x)	(CUNA(XSN-1) || CUNA(XSN-2) ? _UNK.c/
CD2	implicitatt.c	/^#define	CD2(x)	(CUNA(XSN-1) || CUNA(XSN-2) ? _UNK./
CF	global.c	59
CLASSP	modelfiles.c	75
CLEANUP	defns.i	230
CMINFO	defns.i	116
CONDSP	modelfiles.c	77
COST	report.c	45
COSTSP	modelfiles.c	94
COVERP	modelfiles.c	91
CRule	defns.i	430
CRuleSet	defns.i	451
CUNA	implicitatt.c	/^#define CUNA(a)	(CUnknownVal(XStack[a]) || NotAppl/
CUTP	modelfiles.c	76
CUnknownVal	implicitatt.c	/^#define	CUnknownVal(AV)		(AV.cval==_UNK.cval)$/
CVal	defns.i	/^#define  CVal(Case,Att)		Case[Att]._cont_val$/
CValToStr	utility.c	/^void CValToStr(ContValue CV, Attribute Att, String/
CWTATTERR	defns.i	219
Cachesort	sort.c	/^void Cachesort(CaseNo Fp, CaseNo Lp, SortRec *SRec/
CalculateDeltaErrs	siftrules.c	/^CaseCount CalculateDeltaErrs()$/
Case	global.c	109
CaseCount	defns.i	247
CaseLabel	utility.c	/^String CaseLabel(CaseNo N)$/
CaseNo	defns.i	246
Cases	defns.i	355
Cases	defns.i	375
CharWidth	text.i	/^#define	 CharWidth(S)		UTF8CharWidth(S)$/
CharWidth	text.i	/^#define	 CharWidth(S)		(int) strlen(S)$/
Check	utility.c	/^void Check(float Val, float Low, float High)$/
CheckActiveSpace	classify.c	/^void CheckActiveSpace(int N)$/
CheckClose	defns.i	/^#define  CheckClose(f)		if(f) {fclose(f); f=Nil;}$/
CheckFile	modelfiles.c	/^void CheckFile(String Extension, Boolean Write)$/
CheckSubsets	prune.c	/^void CheckSubsets(Tree T, Boolean PruneDefaults)$/
CheckUtilityBand	classify.c	/^void CheckUtilityBand(int *u, RuleNo r, ClassNo Ac/
CheckValue	getdata.c	/^void CheckValue(DataRec DVec, Attribute Att)$/
ChooseSplit	formtree.c	/^Attribute ChooseSplit(CaseNo Fp, CaseNo Lp, CaseCo/
Class	defns.i	/^#define  Class(Case)		(*Case)._discr_val$/
ClassAtt	global.c	71
ClassDist	defns.i	356
ClassFreq	defns.i	385
ClassFreq	global.c	143
ClassName	global.c	77
ClassNo	defns.i	249
ClassThresh	global.c	105
Classify	classify.c	/^ClassNo Classify(DataRec Case)$/
Cleanup	utility.c	/^void Cleanup()$/
ClearBits	defns.i	/^#define	 ClearBits(n,s)		memset(s,0,n)$/
Coeff	prune.c	812
Compress	rules.c	/^Byte *Compress(int *L)$/
CompressBranches	prune.c	/^void CompressBranches(Tree T)$/
ComputeGain	info.c	/^double ComputeGain(double BaseInfo, float UnknFrac/
CondBits	siftrules.c	/^float CondBits(Condition C)$/
CondFailedBy	formrules.c	51
CondTest	defns.i	437
Condition	defns.i	415
Confidence	global.c	125
Conjunct	implicitatt.c	/^Boolean Conjunct()$/
ConstructClassifiers	construct.c	/^void ConstructClassifiers()$/
ConstructRuleTree	ruletree.c	/^void ConstructRuleTree(CRuleSet RS)$/
ContValue	defns.i	254
ContValue	defns.i	257
ContinTest	contin.c	/^void ContinTest(Tree Node, Attribute Att)$/
Continuous	defns.i	/^#define  Continuous(a)		(! MaxAttVal[a] && ! StatB/
CopyBits	defns.i	/^#define	 CopyBits(n,f,t)	memcpy(t,f,n)$/
CopyTree	trees.c	/^Tree CopyTree(Tree T)$/
Correct	defns.i	426
CountCases	defns.i	/^#define	 CountCases(f,l)	(UnitWeights ? (l-(f)+1.0/
CountData	getdata.c	/^CaseNo CountData(FILE *Df)$/
CountVotes	siftrules.c	/^void CountVotes(CaseNo i)$/
CovBy	global.c	182
CovByBlock	siftrules.c	53
Cover	defns.i	425
CoverClass	siftrules.c	/^void CoverClass(ClassNo Target)$/
CrossVal	xval.c	/^void CrossVal()$/
Cut	defns.i	361
Cut	defns.i	410
D2	implicitatt.c	/^#define	D2(x)	(DUNA(XSN-1) || DUNA(XSN-2) ? _UNK.d/
DATEVAL	defns.i	112
DEFAULTP	modelfiles.c	93
DISCRETE	defns.i	110
DList	formtree.c	44
DN	implicitatt.c	46
DUNA	implicitatt.c	/^#define DUNA(a)	(DUnknownVal(XStack[a]) || NotAppl/
DUPATTNAME	defns.i	211
DUnknownVal	implicitatt.c	/^#define	DUnknownVal(AV)		(AV.dval==_UNK.dval)$/
DVal	defns.i	/^#define  DVal(Case,Att)		Case[Att]._discr_val$/
DataBlock	utility.c	188
DataBlockRec	utility.c	196
DataBlockSize	utility.c	199
DataMem	utility.c	198
DataRec	defns.i	323
DateToDay	utility.c	/^int DateToDay(String DS)	\/*  Day 1 is 0000\/03\/01  /
DateVal	defns.i	/^#define	 DateVal(a)		StatBit(a,DATEVAL)$/
DayToDate	utility.c	/^void DayToDate(int Day, String Date)$/
DefNVal	defns.i	/^#define	 DefNVal(DE)	DE._operand._n_val$/
DefOp	defns.i	/^#define	 DefOp(DE)	DE._op_code$/
DefSVal	defns.i	/^#define	 DefSVal(DE)	DE._operand._s_val$/
DefSemanticsError	implicitatt.c	/^void DefSemanticsError(int Fi, String Msg, int OpC/
DefSize	implicitatt.c	46
DefSyntaxError	implicitatt.c	/^void DefSyntaxError(String Msg)$/
DefVal	defns.i	267
Default	global.c	176
Definition	defns.i	274
DeleteFromList	formrules.c	/^void DeleteFromList(CaseNo *Before, CaseNo N)$/
Delimiter	getnames.c	42
DeltaErrs	siftrules.c	39
Denominator	utility.c	/^int Denominator(ContValue Val)$/
DesiredOutcome	ruletree.c	/^int DesiredOutcome(CRule R, int TI)$/
Dev	prune.c	811
Digits	trees.c	/^#define Digits(n)	((n) < 10 ? 3 : (int)(3 + log(n-/
DiscrKnownBaseInfo	discr.c	/^double DiscrKnownBaseInfo(CaseCount KnownCases, Di/
DiscrValue	defns.i	250
Discrete	defns.i	/^#define  Discrete(a)		(MaxAttVal[a] || StatBit(a,D/
DiscreteTest	discr.c	/^void DiscreteTest(Tree Node, Attribute Att)$/
Divide	formtree.c	/^void Divide(Tree T, CaseNo Fp, CaseNo Lp, int Leve/
Dump	implicitatt.c	/^void Dump(char OpCode, ContValue F, String S, int /
DumpOp	implicitatt.c	/^void DumpOp(char OpCode, int Fi)$/
ELTSP	modelfiles.c	78
ENTRIESP	modelfiles.c	79
EOFINATT	defns.i	192
ERRORP	modelfiles.c	73
ERRP	report.c	44
EVALTEST	defns.i	229
EVALTRAIN	defns.i	227
EXCLUDE	defns.i	108
EX_MODELFILE	text.i	/^#define	 EX_MODELFILE(f)	"file %s incompatible wit/
E_BADATTNAME	text.i	177
E_BADATTVAL	text.i	/^#define	 E_BADATTVAL(v,a)	"bad value of `%s' for a/
E_BADCLASS	text.i	186
E_BADCLASSTHRESH	text.i	175
E_BADCOST	text.i	188
E_BADCOSTCLASS	text.i	187
E_BADCTARGET	text.i	196
E_BADDATE	text.i	/^#define	 E_BADDATE(d,a)		"bad date `%s' for attrib/
E_BADDEF1	text.i	/^#define	 E_BADDEF1(a,s,x)	"in definition of attrib/
E_BADDEF2	text.i	/^#define	 E_BADDEF2(a,s,x)	"in definition of attrib/
E_BADDEF3	text.i	213
E_BADDEF4	text.i	214
E_BADDISCRETE	text.i	192
E_BADDTARGET	text.i	198
E_BADNUMBER	text.i	/^#define	 E_BADNUMBER(a)		"value of `%s' changed to/
E_BADTIME	text.i	/^#define	 E_BADTIME(d,a)		"bad time `%s' for attrib/
E_BADTSTMP	text.i	/^#define	 E_BADTSTMP(d,a)	"bad timestamp `%s' for a/
E_CWTATTERR	text.i	183
E_DUPATTNAME	text.i	182
E_EOFINATT	text.i	179
E_ForWrite	text.i	174
E_HITEOF	text.i	201
E_LEQCLASSTHRESH	text.i	176
E_LONGNAME	text.i	200
E_MFATT	text.i	217
E_MFATTVAL	text.i	218
E_MFCLASS	text.i	219
E_MFEOF	text.i	220
E_MISSNAME	text.i	202
E_NOFILE	text.i	/^#define	 E_NOFILE(f,e)		"cannot open file %s%s\\n",/
E_NOMEM	text.i	189
E_NOTARGET	text.i	194
E_SAMEATT	text.i	/^#define	 E_SAMEATT(a,b)		"[warning] attribute `%s'/
E_SINGLEATTVAL	text.i	/^#define	 E_SINGLEATTVAL(a,v)	"attribute `%s' has o/
E_TOOMANYVALS	text.i	/^#define	 E_TOOMANYVALS(a,n)	"too many values for a/
E_UNKNOWNATT	text.i	206
Elements	trees.c	/^DiscrValue Elements(Attribute Att, Set S, DiscrVal/
EltRec	defns.i	282
EmptyNA	defns.i	/^#define	 EmptyNA(T)	(T->Branch[1]->Cases < 0.01)$/
Entry	modelfiles.c	38
EnvRec	defns.i	401
Ep	defns.i	374
Epsilon	defns.i	104
ErrCost	attwinnow.c	/^float ErrCost(Tree T, CaseNo Fp, CaseNo Lp)$/
Error	utility.c	/^void Error(int ErrNo, String S1, String S2)$/
Errors	defns.i	357
Errors	formrules.c	45
EstimateErrs	prune.c	/^void EstimateErrs(Tree T, CaseNo Fp, CaseNo Lp, in/
EstimateMaxGR	contin.c	/^void EstimateMaxGR(Attribute Att, CaseNo Fp, CaseN/
EvalContinuousAtt	contin.c	/^void EvalContinuousAtt(Attribute Att, CaseNo Fp, C/
EvalDiscrSplit	formtree.c	/^void EvalDiscrSplit(Attribute Att, CaseCount Cases/
EvalDiscreteAtt	discr.c	/^void EvalDiscreteAtt(Attribute Att, CaseCount Case/
EvalOrderedAtt	discr.c	/^void EvalOrderedAtt(Attribute Att, CaseCount Cases/
EvalSubset	subset.c	/^void EvalSubset(Attribute Att, CaseCount Cases)$/
Evaluate	construct.c	/^void Evaluate(int Flags)$/
EvaluateBoost	construct.c	/^void EvaluateBoost(int Flags)$/
EvaluateDef	implicitatt.c	/^AttValue EvaluateDef(Definition D, DataRec Case)$/
EvaluatePair	subset.c	/^void EvaluatePair(DiscrValue x, DiscrValue y, Case/
EvaluateSingle	construct.c	/^void EvaluateSingle(int Flags)$/
Exclude	defns.i	/^#define	 Exclude(a)		StatBit(a,EXCLUDE)$/
ExecTime	utility.c	/^double  ExecTime()$/
ExpandedLeafCount	trees.c	/^int ExpandedLeafCount(Tree T)$/
ExplicitAtt	getnames.c	/^void ExplicitAtt(FILE *Nf)$/
Expression	implicitatt.c	/^Boolean Expression()$/
Extra	construct.c	479
Extra	report.c	224
ExtraC	construct.c	483
ExtraC	report.c	228
ExtraErrs	prune.c	/^float ExtraErrs(CaseCount N, CaseCount E, ClassNo /
FN_SIZE	defns.i	119
FORKSP	modelfiles.c	80
FORMRULES	defns.i	225
FORMTREE	defns.i	223
FREQP	modelfiles.c	81
F_Boost	text.i	68
F_Cost	text.i	66
F_DecisionTree16	text.i	54
F_DecisionTree23	text.i	56
F_Errors	text.i	64
F_Fold	text.i	50
F_NoErrors	text.i	59
F_NoErrorsCost	text.i	61
F_Rules	text.i	62
F_Rules16	text.i	58
F_Rules23	text.i	60
F_SizeErrors	text.i	55
F_SizeErrorsCost	text.i	57
F_Trial	text.i	52
F_UCost	text.i	67
F_UErrors	text.i	65
F_UFold	text.i	51
F_URules	text.i	63
F_UTrial	text.i	53
Factor	implicitatt.c	/^Boolean Factor()$/
Fail0	formrules.c	65
Fail1	formrules.c	66
FailMany	formrules.c	67
FailSem	implicitatt.c	/^#define FailSem(Msg)	 {DefSemanticsError(Fi, Msg, /
FailSyn	implicitatt.c	/^#define FailSyn(Msg)	 {DefSyntaxError(Msg); return/
Fi	defns.i	278
FileStem	global.c	113
Find	implicitatt.c	/^Boolean Find(String S)$/
FindAllFreq	formtree.c	/^void FindAllFreq(CaseNo Fp, CaseNo Lp)$/
FindAttName	implicitatt.c	/^Attribute FindAttName()$/
FindBestAtt	formtree.c	/^Attribute FindBestAtt(CaseCount Cases)$/
FindBounds	p-thresh.c	/^void FindBounds(Tree T, CaseNo Fp, CaseNo Lp)$/
FindClassFreq	formtree.c	/^void FindClassFreq(double *CF, CaseNo Fp, CaseNo L/
FindDepth	trees.c	/^void FindDepth(Tree T)$/
FindLeaf	classify.c	/^void FindLeaf(DataRec Case, Tree T, Tree PT, float/
FindMinCC	prune.c	/^void FindMinCC(Tree T)$/
FindOne	implicitatt.c	/^int FindOne(String *Alt)$/
FindOutcome	classify.c	/^int FindOutcome(DataRec Case, Condition OneCond)$/
FindTestCodes	siftrules.c	/^void FindTestCodes()$/
Fire	defns.i	436
Fires	global.c	179
FixedSplitInfo	defns.i	380
Fn	global.c	208
FoldHead	xval.c	289
FollowAllBranches	classify.c	/^void FollowAllBranches(DataRec Case, Tree T, float/
ForEach	defns.i	/^#define	 ForEach(v,f,l)		for(v=f ; v<=l ; ++v)$/
Forks	defns.i	359
Forks	defns.i	438
FormRules	formrules.c	/^CRuleSet FormRules(Tree T)$/
FormTree	formtree.c	/^void FormTree(CaseNo Fp, CaseNo Lp, int Level, Tre/
Free	defns.i	/^#define Free(x)			{free(x); x=0;}$/
FreeCases	utility.c	/^void FreeCases()$/
FreeClassifier	classify.c	/^void FreeClassifier(int Trial)$/
FreeData	getdata.c	/^void FreeData()$/
FreeFormRuleData	formrules.c	/^void FreeFormRuleData()$/
FreeLastCase	utility.c	/^void FreeLastCase(DataRec Case)$/
FreeNames	getnames.c	/^void FreeNames()$/
FreeRule	rules.c	/^void FreeRule(CRule R)$/
FreeRuleTree	ruletree.c	/^void FreeRuleTree(RuleTree RT)$/
FreeRules	rules.c	/^void FreeRules(CRuleSet RS)$/
FreeSiftRuleData	siftrules.c	/^void FreeSiftRuleData()$/
FreeTree	trees.c	/^void FreeTree(Tree T)$/
FreeTreeData	formtree.c	/^void FreeTreeData()$/
FreeUnlessNil	defns.i	/^#define  FreeUnlessNil(p)	if((p)!=Nil) Free(p)$/
FreeVector	utility.c	/^void FreeVector(void **V, int First, int Last)$/
Freq	defns.i	384
Funcs	implicitatt.c	417
GEnv	global.c	161
Gain	global.c	146
GenerateLogs	siftrules.c	/^void GenerateLogs(int MaxN)$/
GetData	getdata.c	/^void GetData(FILE *Df, Boolean Train, Boolean Allo/
GetDataRec	getdata.c	/^DataRec GetDataRec(FILE *Df, Boolean Train)$/
GetFile	utility.c	/^FILE *GetFile(String Extension, String RW)$/
GetInt	utility.c	/^int GetInt(String S, int N)$/
GetMCosts	mcost.c	/^void GetMCosts(FILE *Cf)$/
GetNames	getnames.c	/^void GetNames(FILE *Nf)$/
GetRules	modelfiles.c	/^CRuleSet GetRules(String Extension)$/
GetTree	modelfiles.c	/^Tree GetTree(String Extension)$/
GlobalBaseInfo	global.c	153
GlobalPrune	prune.c	/^void GlobalPrune(Tree T)$/
Goodbye	defns.i	/^#define Goodbye(x)		{Cleanup(); exit(x);}$/
Goodbye	defns.i	/^#define Goodbye(x)		exit(x)$/
GreatestValueBelow	contin.c	/^ContValue GreatestValueBelow(ContValue Th, CaseNo /
Group	formtree.c	/^CaseNo Group(DiscrValue V, CaseNo Bp, CaseNo Ep, T/
GrowRT	ruletree.c	/^RuleTree GrowRT(RuleNo *RR, int RRN, CRule *Rule)$/
HIGHP	modelfiles.c	86
HITEOF	defns.i	206
Head	utility.c	192
HighCases	defns.i	378
HighClass	defns.i	387
HighVal	defns.i	388
HillClimb	siftrules.c	/^void HillClimb()$/
IDP	modelfiles.c	82
INITP	modelfiles.c	96
IValsSize	global.c	82
IgnoredVals	global.c	81
ImplicitAtt	implicitatt.c	/^void ImplicitAtt(FILE * Nf)$/
In	defns.i	/^#define	 In(b,s)		((s[(b) >> 3]) & Bit((b) & 07))$/
InChar	getnames.c	/^int InChar(FILE *f)$/
InCondition	modelfiles.c	/^Condition InCondition()$/
InRule	modelfiles.c	/^CRule InRule()$/
InRules	modelfiles.c	/^CRuleSet InRules()$/
InTree	modelfiles.c	/^Tree InTree()$/
Inc	getdata.c	39
Increment	formrules.c	/^void Increment(int d, CaseNo i, double *Total, dou/
Indent	trees.c	/^void Indent(int Sh, int BrNo)$/
InitialiseBellNumbers	subset.c	/^void InitialiseBellNumbers()$/
InitialiseExtraErrs	prune.c	/^void InitialiseExtraErrs()$/
InitialiseTreeData	formtree.c	/^void InitialiseTreeData()$/
InitialiseVotes	siftrules.c	/^void InitialiseVotes()$/
InitialiseWeights	construct.c	/^void InitialiseWeights()$/
InsertParents	prune.c	/^void InsertParents(Tree T, Tree P)$/
Int	defns.i	/^#define	 Int(x)			((int)(x+0.5))$/
Intab	prune.c	/^#define	  Intab(x)		Indent(x, 0)$/
Interpolate	classify.c	/^float Interpolate(Tree T, ContValue Val)$/
InvertFires	siftrules.c	/^void InvertFires()$/
KRFp	utility.c	256
KRInit	global.c	204
KRandom	utility.c	/^double KRandom()$/
KnownCases	defns.i	376
LBp	getnames.c	43
LEQCLASSTHRESH	defns.i	190
LIFTP	modelfiles.c	90
LOCK	global.c	62
LONGNAME	defns.i	205
LOWP	modelfiles.c	84
LabelBuffer	utility.c	509
LastBranch	trees.c	51
LastCovBy	siftrules.c	56
Leaf	defns.i	354
Leaf	trees.c	/^Tree Leaf(double *Freq, ClassNo NodeClass, CaseCou/
Leaves	defns.i	360
Lhs	defns.i	423
Li	defns.i	279
LineBuffer	getnames.c	43
ListAttsUsed	getnames.c	/^void ListAttsUsed()$/
ListSort	rules.c	/^void ListSort(int *L, int Fp, int Lp)$/
LocalVerbosity	prune.c	/^#define	  LocalVerbosity(x,s)	if (Sh >= 0) {Verbos/
Log	defns.i	/^#define	 Log(x)			((x) <= 0 ? 0.0 : log((double)x)/
Log2	defns.i	140
LogCaseNo	global.c	190
LowCases	defns.i	378
LowClass	defns.i	387
LowVal	defns.i	388
Lower	defns.i	362
MAXLINEBUFFER	getnames.c	41
MDLWt	formtree.c	42
MIDP	modelfiles.c	85
MINITEMS	global.c	56
MISSNAME	defns.i	207
MODELFILE	defns.i	218
MakeSubset	modelfiles.c	/^Set MakeSubset(Attribute Att)$/
MarkActive	classify.c	/^void MarkActive(RuleTree RT, DataRec Case)$/
Matches	classify.c	/^Boolean Matches(CRule R, DataRec Case)$/
Max	defns.i	/^#define	 Max(a,b)               ((a)>(b) ? (a) : (/
MaxAtt	global.c	85
MaxAttVal	global.c	94
MaxCase	global.c	107
MaxClass	global.c	86
MaxDepth	formrules.c	56
MaxDiscrVal	global.c	87
MaxExtraErrs	prune.c	49
MaxLeaves	formtree.c	47
MaxLine	trees.c	/^int MaxLine(Tree T)$/
MaxTree	global.c	139
Mc50	c50.c	/^int main(int Argc, char *Argv[]) {$/
Merge	subset.c	/^void Merge(DiscrValue x, DiscrValue y, CaseCount C/
MergeEntr	defns.i	399
MergeInfo	defns.i	398
MessageLength	siftrules.c	/^int MessageLength(RuleNo NR, double RuleBits, floa/
Mid	defns.i	364
Min	defns.i	/^#define	 Min(a,b)               ((a)<(b) ? (a) : (/
MinCC	prune.c	53
MinLeaf	defns.i	105
MinSplit	defns.i	383
Modify	utility.c	/^#define	Modify(F,S)	if ( (F -= S) < 0 ) F += 1.0$/
MostSpec	global.c	133
MoveBlock	subset.c	/^void MoveBlock(DiscrValue V1, DiscrValue V2)$/
Mreport	report.c	/^int main(int argc, char *argv[])$/
MultOps	implicitatt.c	349
Multi	construct.c	463
MultiVal	formtree.c	39
NA	defns.i	125
NAInfo	defns.i	379
NAME	utility.c	43
NDList	formtree.c	45
NFail	formrules.c	62
NOFILE	defns.i	188
NOMEM	defns.i	199
NOTARGET	defns.i	202
NRules	global.c	171
NTest	ruletree.c	43
NXT	prune.c	52
NewCase	utility.c	/^DataRec NewCase()$/
NewRule	rules.c	/^Boolean NewRule(Condition Cond[], int NCond, Class/
Nil	defns.i	100
No	defns.i	/^#define	 No(f,l)	((l)-(f)+1)$/
NodeType	defns.i	353
NodeType	defns.i	408
None	defns.i	103
NotApplic	defns.i	/^#define	 NotApplic(Case,Att)	(Att != ClassAtt && D/
NotApplicVal	defns.i	/^#define	 NotApplicVal(AV)	(AV._discr_val==NA)$/
NotifyStage	update.c	/^void NotifyStage(int S)$/
OKP	modelfiles.c	92
OP_AND	defns.i	292
OP_ATT	defns.i	288
OP_COS	defns.i	310
OP_DIV	defns.i	306
OP_END	defns.i	315
OP_EQ	defns.i	294
OP_EXP	defns.i	313
OP_GE	defns.i	297
OP_GT	defns.i	296
OP_INT	defns.i	314
OP_LE	defns.i	299
OP_LOG	defns.i	312
OP_LT	defns.i	298
OP_MINUS	defns.i	303
OP_MISS	defns.i	291
OP_MOD	defns.i	307
OP_MULT	defns.i	305
OP_NE	defns.i	295
OP_NUM	defns.i	289
OP_OR	defns.i	293
OP_PLUS	defns.i	302
OP_POW	defns.i	308
OP_SEQ	defns.i	300
OP_SIN	defns.i	309
OP_SNE	defns.i	301
OP_STR	defns.i	290
OP_TAN	defns.i	311
OP_UMINUS	defns.i	304
ORDERED	defns.i	111
Of	global.c	210
OptArg	utility.c	71
Option	utility.c	71
OrderByClass	siftrules.c	/^int OrderByClass()$/
OrderByUtility	siftrules.c	/^int OrderByUtility()$/
OrderRules	siftrules.c	/^void OrderRules()$/
Ordered	defns.i	/^#define	 Ordered(a)		StatBit(a,ORDERED)$/
OutTree	modelfiles.c	/^void OutTree(Tree T)$/
P1	defns.i	/^#define	 P1(x)		(rint((x)*10) \/ 10)$/
PREC	defns.i	255
PREC	defns.i	258
PROPS	modelfiles.c	71
Parent	defns.i	367
PartInfo	contin.c	/^#define	PartInfo(n) (-(n)*Log((n)\/GEnv.Cases))$/
Pcalloc	utility.c	/^void *Pcalloc(size_t Number, unsigned int Size)$/
Pessimistic	formrules.c	48
Plural	defns.i	/^#define  Plural(n)		((n) != 1 ? "s" : "")$/
Pmalloc	utility.c	/^void *Pmalloc(size_t Bytes)$/
PopCondition	formrules.c	/^void PopCondition()$/
PossibleValues	prune.c	47
Prealloc	utility.c	/^void *Prealloc(void *Present, size_t Bytes)$/
Prefer	siftrules.c	/^#define Prefer(d,c1,c2) ((d) > 0 || ( (d) == 0 && /
Prepare	xval.c	/^void Prepare()$/
PrepareForContin	contin.c	/^void PrepareForContin(Attribute Att, CaseNo Fp, Ca/
PrepareForScan	contin.c	/^CaseNo PrepareForScan(CaseNo Lp)$/
Prev	utility.c	194
PreviousError	implicitatt.c	48
Primary	implicitatt.c	/^Boolean Primary()$/
PrintCondition	rules.c	/^void PrintCondition(Condition C)$/
PrintConfusionMatrix	confmat.c	/^void PrintConfusionMatrix(CaseNo *ConfusionMat)$/
PrintDistribution	info.c	/^void PrintDistribution(Attribute Att, DiscrValue M/
PrintErrorBreakdown	confmat.c	/^void PrintErrorBreakdown(CaseNo *ConfusionMat)$/
PrintHeader	utility.c	/^void PrintHeader(String Title)$/
PrintRule	rules.c	/^void PrintRule(CRule R)$/
PrintRules	rules.c	/^void PrintRules(CRuleSet RS, String Msg)$/
PrintSubset	subset.c	/^void PrintSubset(Attribute Att, Set Ss)$/
PrintSummary	report.c	/^void PrintSummary(float **Val, int No, char *Title/
PrintTree	trees.c	/^void PrintTree(Tree T, String Title)$/
PrintUsageInfo	confmat.c	/^void PrintUsageInfo(CaseNo *Usage)$/
Prior	defns.i	427
ProcessLists	formrules.c	/^void ProcessLists()$/
ProcessOption	utility.c	/^char ProcessOption(int Argc, char *Argv[], char *O/
ProcessQueue	formtree.c	/^void ProcessQueue(CaseNo WFp, CaseNo WLp, CaseCoun/
Progress	update.c	/^void Progress(float Delta)$/
Prop	modelfiles.c	40
PropName	modelfiles.c	66
PropVal	modelfiles.c	67
PropValSize	modelfiles.c	69
Prune	prune.c	/^void Prune(Tree T)$/
PruneRule	formrules.c	/^void PruneRule(Condition Cond[], ClassNo TargetCla/
PruneSubsets	siftrules.c	/^void PruneSubsets()$/
PushCondition	formrules.c	/^void PushCondition()$/
Quicksort	sort.c	/^void Quicksort(CaseNo Fp, CaseNo Lp, Attribute Att/
READDATA	defns.i	221
READTEST	defns.i	228
READXDATA	defns.i	233
REGROW	prune.c	43
RELEASE	defns.i	35
REPORTPROGRESS	prune.c	44
RESULTP	modelfiles.c	87
RESULTS	defns.i	232
RNo	defns.i	420
RT	defns.i	449
RULESP	modelfiles.c	88
Raw	global.c	121
RawExtraErrs	prune.c	/^float RawExtraErrs(CaseCount N, CaseCount E)$/
ReadDefinition	implicitatt.c	/^void ReadDefinition(FILE *f)$/
ReadFilePrefix	modelfiles.c	/^void ReadFilePrefix(String Extension)$/
ReadHeader	modelfiles.c	/^void ReadHeader()$/
ReadName	getnames.c	/^Boolean ReadName(FILE *f, String s, int n, char Co/
ReadProp	modelfiles.c	/^int ReadProp(char *Delim)$/
Realloc	defns.i	/^#define  Realloc(V,N,T)		V = (T *) Prealloc(V, (N)/
ReasonableSubsets	defns.i	395
RecalculateErrs	prune.c	54
RecordAttUsage	construct.c	/^void RecordAttUsage(DataRec Case, int *Usage)$/
RelCWt	defns.i	/^#define	 RelCWt(Case)		( Unknown(Case,CWtAtt)||\\$/
RelOps	implicitatt.c	288
RemoveQuotes	modelfiles.c	/^String RemoveQuotes(String S)$/
ResetBit	defns.i	/^#define	 ResetBit(b,s)		(s[(b) >> 3] ^= Bit((b) & /
ResetKR	utility.c	/^void ResetKR(int KRInit)$/
RestoreDistribs	prune.c	/^void RestoreDistribs(Tree T)$/
ResubErrs	p-thresh.c	/^void ResubErrs(Tree T, CaseNo Fp, CaseNo Lp)$/
Result	xval.c	39
Rhs	defns.i	424
Rule	global.c	169
RuleClassify	classify.c	/^ClassNo RuleClassify(DataRec Case, CRuleSet RS)$/
RuleCondOK	ruletree.c	46
RuleIn	siftrules.c	50
RuleNo	defns.i	404
RuleSet	global.c	174
RuleSpace	global.c	172
RuleTree	defns.i	433
RuleTreeRec	defns.i	441
SAMEATT	defns.i	217
SAMPLEP	modelfiles.c	95
SAMPLEUNIT	formtree.c	49
SDefault	defns.i	448
SE	report.c	/^float SE(float sum, float sumsq, int no)$/
SE	xval.c	/^float SE(float sum, float sumsq, int no)$/
SExpression	implicitatt.c	/^Boolean SExpression()$/
SIFTRULES	defns.i	226
SIMPLIFYTREE	defns.i	224
SINGLEATTVAL	defns.i	193
SIZE	report.c	43
SKIP	defns.i	109
SNRules	defns.i	446
SRec	defns.i	389
SRule	defns.i	447
STIMEVAL	defns.i	113
SUBSET	global.c	47
SVal	defns.i	/^#define  SVal(Case,Att)		Case[Att]._discr_val$/
SameDistribution	subset.c	/^Boolean SameDistribution(DiscrValue V1, DiscrValue/
SameRule	rules.c	/^Boolean SameRule(RuleNo r, Condition Cond[], int N/
Sample	formtree.c	/^void Sample(CaseNo Fp, CaseNo Lp, CaseNo N)$/
SampleEstimate	formtree.c	/^void SampleEstimate(CaseNo Fp, CaseNo Lp, CaseCoun/
SampleFrac	global.c	126
SampleFrom	getdata.c	44
Sampled	formtree.c	52
Satisfies	classify.c	/^Boolean Satisfies(DataRec Case, Condition OneCond)/
SaveCase	global.c	111
SaveDiscreteNames	modelfiles.c	/^void SaveDiscreteNames()$/
SaveRules	modelfiles.c	/^void SaveRules(CRuleSet RS, String Extension)$/
SaveTree	modelfiles.c	/^void SaveTree(Tree T, String Extension)$/
Scan	formrules.c	/^void Scan(Tree T)$/
ScanTree	attwinnow.c	/^void ScanTree(Tree T, Boolean *Used)$/
SecsToTime	utility.c	/^void SecsToTime(int Secs, String Time)$/
SelectClass	classify.c	/^ClassNo SelectClass(ClassNo Default, Boolean UseCo/
SelectTest	ruletree.c	/^int SelectTest(RuleNo *RR, int RRN, CRule *Rule)$/
Set	defns.i	243
SetAvCWt	construct.c	/^void SetAvCWt()$/
SetBit	defns.i	/^#define	 SetBit(b,s)		(s[(b) >> 3] |= Bit((b) & 07/
SetDefaultClass	siftrules.c	/^void SetDefaultClass()$/
SetDiscrFreq	discr.c	/^void SetDiscrFreq(Attribute Att)$/
SetFOpt	main.c	/^#define SetFOpt(V)	V = strtod(OptArg, &EndPtr);\\$/
SetGlobalUnitWeights	prune.c	/^void SetGlobalUnitWeights(int LocalFlag)$/
SetIOpt	main.c	/^#define SetIOpt(V)	V = strtol(OptArg, &EndPtr, 10)/
SetInitialTheory	siftrules.c	/^void SetInitialTheory()$/
SetMinGainThresh	formtree.c	/^void SetMinGainThresh()$/
SetTSBase	utility.c	/^void SetTSBase(int y)$/
SetTestIndex	ruletree.c	/^void SetTestIndex(Condition C)$/
SetupNCost	formrules.c	/^void SetupNCost()$/
Show	trees.c	/^void Show(Tree T, int Sh)$/
ShowBranch	trees.c	/^void ShowBranch(int Sh, Tree T, DiscrValue v, Disc/
Shuffle	xval.c	/^void Shuffle(int *Vec)$/
SiftRules	siftrules.c	/^void SiftRules(float EstErrRate)$/
SingleFail	formrules.c	/^int SingleFail(CaseNo i)$/
Size	defns.i	422
Skip	defns.i	/^#define	 Skip(a)		StatBit(a,EXCLUDE|SKIP)$/
SkipComment	defns.i	171
SoftenThresh	p-thresh.c	/^void SoftenThresh(Tree T)$/
SomeMiss	global.c	101
SortActive	classify.c	/^void SortActive()$/
SortRec	defns.i	331
Space	defns.i	/^#define  Space(s)	(s == ' ' || s == '\\n' || s == '/
SpecialStatus	global.c	96
Split	attwinnow.c	39
Sprout	trees.c	/^void Sprout(Tree T, DiscrValue Branches)$/
Stack	formrules.c	54
StatBit	defns.i	/^#define	 StatBit(a,b)		(SpecialStatus[a]&(b))$/
StdP	construct.c	471
StdP	report.c	216
StdPC	construct.c	475
StdPC	report.c	220
StdR	construct.c	467
StoreIVal	getdata.c	/^int StoreIVal(String S)$/
StreamIn	modelfiles.c	/^void StreamIn(String S, int n)$/
String	defns.i	244
SubDef	trees.c	50
SubSpace	trees.c	49
SubTree	trees.c	48
Subsample	formtree.c	40
Subset	defns.i	365
Subset	defns.i	390
Subset	defns.i	411
Subset	global.c	158
SubsetEntr	defns.i	397
SubsetInfo	defns.i	396
SubsetTest	subset.c	/^void SubsetTest(Tree Node, Attribute Att)$/
Subsets	defns.i	392
Subsets	global.c	159
Succ	formrules.c	68
SumNocostWeights	formtree.c	/^CaseCount SumNocostWeights(CaseNo Fp, CaseNo Lp)$/
SumWeights	formtree.c	/^CaseCount SumWeights(CaseNo Fp, CaseNo Lp)$/
Summary	xval.c	/^void Summary()$/
SuppressErrorMessages	getdata.c	41
Swap	defns.i	/^#define	 Swap(a,b)	{DataRec xab;\\$/
SwapRule	siftrules.c	/^void SwapRule(RuleNo A, RuleNo B)$/
SwapSRec	sort.c	/^#define SwapSRec(a,b)	{Xab=SRec[a]; SRec[a]=SRec[b/
THEORYFRAC	defns.i	98
TI	formrules.c	/^#define TI(a,b)		(((a)+(b)) * Log((a)+(b)) - (a) */
TNo	defns.i	421
TOOMANYVALS	defns.i	200
TRf	global.c	207
TSN	implicitatt.c	44
TSTMPVAL	defns.i	114
TStack	implicitatt.c	43
TStackSize	implicitatt.c	44
TStampToMins	utility.c	/^int TStampToMins(String TS)$/
TStampVal	defns.i	/^#define	 TStampVal(a)		StatBit(a,TSTMPVAL)$/
TX_IllegalValue	text.i	/^#define	 TX_IllegalValue(v,l,h)	"\\t** illegal valu/
TX_Line	text.i	/^#define	 TX_Line(l,f)		"*** line %d of `%s': ", l,/
TX_ReadData	text.i	/^#define	 TX_ReadData(c,a,f)	"\\nRead %d cases (%d a/
TX_ReadTest	text.i	/^#define	 TX_ReadTest(c,f)	"Read %d cases from %s.t/
TX_Reduced1	text.i	/^#define	 TX_Reduced1(t)		( (t) > 1 ?\\$/
TX_Reduced2	text.i	/^#define	 TX_Reduced2(t)		( (t) > 1 ?\\$/
TX_Release	text.i	/^#define	 TX_Release(n)		"Release " n$/
TYPEP	modelfiles.c	83
T_Abandoned	text.i	152
T_AttributesIn	text.i	122
T_AttributesOut	text.i	123
T_AttributesWinnowed	text.i	124
T_BoostingUnhelpful	text.i	153
T_C50	text.i	74
T_CWtAtt	text.i	121
T_ClassVar	text.i	116
T_Composite	text.i	154
T_Default_class	text.i	158
T_ElementOf	text.i	136
T_ErrorLimit	text.i	221
T_EstImportance	text.i	125
T_EvalHoldOut	text.i	166
T_EvalTest	text.i	130
T_EvalTrain	text.i	128
T_Fold	text.i	168
T_FoldsReduced	text.i	165
T_IgnoreBadClass	text.i	133
T_InRange	text.i	137
T_IsUnknown	text.i	140
T_ListOpts	text.i	95
T_Mean	text.i	169
T_NoWinnow	text.i	127
T_OptApplication	text.i	78
T_OptBoost	text.i	79
T_OptCF	text.i	84
T_OptHeader	text.i	77
T_OptMinCases	text.i	83
T_OptNoCosts	text.i	89
T_OptNoGlobal	text.i	91
T_OptProbThresh	text.i	80
T_OptRules	text.i	85
T_OptSampling	text.i	86
T_OptSeed	text.i	87
T_OptSubsets	text.i	82
T_OptTrials	text.i	81
T_OptUtility	text.i	88
T_OptWinnow	text.i	90
T_OptXval	text.i	92
T_ReadCosts	text.i	120
T_RuleHeader	text.i	138
T_RuleLift	text.i	139
T_Rule_utility_summary	text.i	161
T_Rules	text.i	156
T_SE	text.i	170
T_See5	text.i	73
T_Subtree	text.i	135
T_Summary	text.i	164
T_Summary	text.i	167
T_SummaryOpts	text.i	94
T_Time	text.i	131
T_Tree	text.i	155
T_UBWarn	text.i	114
T_UnregnizedOpt	text.i	93
T_Usage	text.i	129
T_boost	text.i	159
T_class	text.i	162
T_classified_as	text.i	163
T_composite_ruleset	text.i	160
TabSize	trees.c	39
TargetClass	formrules.c	60
Term	implicitatt.c	/^Boolean Term()$/
Test	ruletree.c	42
TestI	defns.i	413
TestOccur	ruletree.c	45
TestSpace	ruletree.c	44
TestUsed	ruletree.c	48
TestValue	defns.i	412
Tested	defns.i	358
Tested	defns.i	409
Tested	global.c	156
TimeToSecs	utility.c	/^int TimeToSecs(String TS)$/
TimeVal	defns.i	/^#define	 TimeVal(a)		StatBit(a,STIMEVAL)$/
TopClass	siftrules.c	47
TotVote	siftrules.c	45
TotalExtraErrs	prune.c	50
TotalInfo	info.c	/^double TotalInfo(double V[], DiscrValue MinVal, Di/
Tree	defns.i	350
TreeClassify	classify.c	/^ClassNo TreeClassify(DataRec Case, Tree DecisionTr/
TreeDepth	trees.c	/^int TreeDepth(Tree T)$/
TreeRec	defns.i	369
TreeSize	trees.c	/^int TreeSize(Tree T)$/
Trial	global.c	138
TrialPred	global.c	141
TrialTreeCost	attwinnow.c	/^float TrialTreeCost(Boolean FirstTime)$/
Type	defns.i	280
UNITWEIGHTS	prune.c	45
UNKNOWN	defns.i	124
UNKNOWNATT	defns.i	212
UPDATE	prune.c	42
USAGEINFO	defns.i	117
UTF8CharWidth	utility.c	/^int UTF8CharWidth(unsigned char *U)$/
Uf	update.c	39
UnSprout	trees.c	/^void UnSprout(Tree T)$/
Uncompress	rules.c	/^void Uncompress(Byte *CL, int *UCL)$/
UnitWeights	global.c	135
Unknown	defns.i	/^#define	 Unknown(Case,Att)	(DVal(Case,Att)==UNKNOW/
UnknownRate	defns.i	382
UnknownVal	defns.i	/^#define	 UnknownVal(AV)		(AV._discr_val==UNKNOWN)$/
UpdateDeltaErrs	siftrules.c	/^void UpdateDeltaErrs(CaseNo i, double Delta, RuleN/
UpdateTStack	implicitatt.c	/^Boolean UpdateTStack(char OpCode, ContValue F, Str/
Upper	defns.i	363
UtilCost	global.c	195
UtilErr	global.c	193
Utility	trees.c	40
V	defns.i	327
VALP	modelfiles.c	89
VERBOSITY	global.c	42
Val	prune.c	810
ValFreq	defns.i	386
ValThresh	formtree.c	51
Verbosity	defns.i	/^#define	Verbosity(d,s)		if(VERBOSITY >= d) {s;}$/
Verbosity	defns.i	/^#define Verbosity(d,s)$/
Vote	defns.i	428
W	defns.i	329
WINNOWATTS	defns.i	222
WSubset	defns.i	391
Waiting	formtree.c	54
Weight	defns.i	/^#define  Weight(Case)		(*(Case-1))._cont_val$/
Which	getnames.c	/^int Which(String Val, String *List, int First, int/
Width	defns.i	106
WinnowAtts	attwinnow.c	/^void WinnowAtts()$/
WriteFilePrefix	modelfiles.c	/^void WriteFilePrefix(String Extension)$/
XDVal	defns.i	/^#define  XDVal(Case,Att)	(Case[Att]._discr_val & 0/
XError	getdata.c	/^#define XError(a,b,c)	if (! SuppressErrorMessages)/
XStackElt	implicitatt.c	63
XT	prune.c	51
Xp	defns.i	374
_NA	implicitatt.c	51
_UNK	implicitatt.c	50
_attribute_value	defns.i	318
_condrec	defns.i	406
_cont_val	defns.i	321
_cont_val	implicitatt.c	60
_datablockrec	utility.c	190
_def_elt	defns.i	269
_def_val	defns.i	262
_discr_val	defns.i	320
_discr_val	implicitatt.c	59
_elt_rec	defns.i	276
_environment	defns.i	372
_n_val	defns.i	265
_op_code	defns.i	271
_operand	defns.i	272
_rulerec	defns.i	418
_rulesetrec	defns.i	444
_ruletreerec	defns.i	434
_s_val	defns.i	264
_sort_rec	defns.i	325
_string_val	implicitatt.c	61
_treerec	defns.i	351
_xstack_elt	implicitatt.c	57
assert	defns.i	/^#define	 assert(x)$/
c50_main	main.c	/^int c50_main(int Argc, char *Argv[])$/
cfive_jmp_fail	c50.c	39
cval	implicitatt.c	65
dval	implicitatt.c	67
exit	defns.i	/^#define exit(status) longjmp(cfive_jmp_fail ,(stat/
false	defns.i	101
first	utility.c	1076
interval	utility.c	1075
last	utility.c	1077
sval	implicitatt.c	66
true	defns.i	102
wcswidth	utility.c	/^int wcswidth(const wchar_t *pwcs, size_t n)$/
wcwidth	utility.c	/^int wcwidth(wchar_t ucs)$/
