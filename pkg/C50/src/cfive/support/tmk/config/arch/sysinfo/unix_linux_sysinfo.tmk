# ===========================================================================
# $Id: unix_linux_sysinfo.tmk,v 1.10 2008/10/24 07:25:52 cfuchs_sf Exp $
# get system information on a linux system
# ===========================================================================
# $Log: unix_linux_sysinfo.tmk,v $
# Revision 1.10  2008/10/24 07:25:52  cfuchs_sf
# added nvcc stuff
#
# Revision 1.9  2008/01/31 02:25:41  yamauchih
# Adapted openSuSE's release file format.
#
# Revision 1.8  2007/08/31 08:16:06  cfuchs_sf
# support for Debian 4.0 (Etch) at the MPI
#
# Revision 1.7  2005/10/21 10:58:00  yamauchih
# add Fedora distribution
#
# Revision 1.6  2005/06/30 22:12:05  yamauchih
# fix: SuSE 9.3 stupidly includes distributer name Linux with space in lsb_release.
#
# Revision 1.5  2005/04/23 20:53:58  yamauchih
# add runmode to build 64bit executables
#
# Revision 1.4  2004/09/30 18:24:23  yamauchih
# fix old redhat wrong ARCH
#
# Revision 1.3  2004/08/09 17:07:34  yamauchih
# *** empty log message ***
#
# Revision 1.2  2004/08/09 16:11:08  yamauchih
# fix non exist lsb_release
#
# Revision 1.1  2004/08/09 14:17:08  yamauchih
# separate system dependent sysinfo
#
#=========================================================

# !!! these informations are always determined directly, and never read
#     from the config cache !!!

assert { [string tolower $::tcl_platform(os)] == "linux" }

dbg_msg "reading [info script]." 1

if { [ catch { set tmp_lsb_release [ exec which lsb_release ] } ] == 0 } {
    if { [ file exist $tmp_lsb_release ] } {
	dbg_msg "linux base standard command lsb_release is found." 1
	set ::DIST    [exec lsb_release -si ]
	# stupid novel SuSE. Distributer == SUSE LINUX. Why `Linux' is in the distributer name?
	# puts [ string trim ${::DIST} ]
	# puts [ string wordstart ${::DIST} end ]
	# puts [ string replace ${::DIST} [ string wordstart ${::DIST} end ] end ]
	set ::DIST    [regsub " \[^ \].*" ${::DIST} ""]
	set ::DISTVER [exec lsb_release -sr ]
    } else {
	dbg_msg "which returns something but not correct??" 1
    }
}

# for Debian, remove the r? part from the Version (e.g. 4.0r0->4.0)
if { $::DIST == "Debian" } {
    set ::DISTVER [regsub {r.*} ${::DISTVER} ""]
}

if { $::DIST == "UnknownDist" } {
    dbg_msg "linux base standard command lsb_release is not found."
    if [file readable "/etc/SuSE-release"]   {
	set ::DIST    "SuSE"
	set ::DISTVER "[lindex [exec grep VERSION /etc/SuSE-release] 2]"
    }
    if [file readable "/etc/redhat-release"]   {
	set ::DIST    "Redhat"
	set ::DISTVER "[lindex [exec cat /etc/redhat-release] 4]"
    }
    if [file readable "/etc/fedora-release"]   {
	set ::DIST    "RedhatFC"
	set ::DISTVER "[lindex [exec cat /etc/fedora-release] 3]"
    }
    if [file readable "/etc/mandrake-release"] {
	set ::DIST    "Mandrake"
	set ::DISTVER "[lindex [exec cat /etc/mandrake-release] 3]"
    }
    if [file readable "/etc/debian_version"] {
	set ::DIST    "Debian"
	set ::DISTVER "[lindex [exec cat /etc/debian_version] 0]"
    }
}

if [file exists "/proc/cpuinfo"] {
    set ::NRCPUS 0
    set cpuinfo [split [exec cat /proc/cpuinfo] "\n"]
    foreach l $cpuinfo {
	if { [string range $l 0 9] == "model name" } {
	    incr ::NRCPUS
	    if { $::NRCPUS == 1 } {
		switch -regexp [string tolower $l] {
		    ".*pentium\\\(r\\\) 4 cpu" { set ::CPU "pentium4" }
		    ".*intel.*xeon.*"   { set ::CPU "opteron"}
		    ".*pentium.*xeon.*" { set ::CPU "pentium4"}
		    ".*pentium.*iii .*" { set ::CPU "pentium3"}
		    ".*pentium.*ii .*"  { set ::CPU "pentium2"}
		    ".*pentium.*"       { set ::CPU "pentium"}
		    ".*amd.*athlon.*"   { set ::CPU "athlon"}
		    ".*amd.*opteron.*"  { set ::CPU "opteron"}
		    default             { set ::CPU "ix86unknown" }
		}
	    }
	} elseif { [string range $l 0 6] == "cpu MHz" } {
	    set _l [split $l]
	    set ::CPUFREQ [lindex $_l end]
	}
    }
}

# ======================================================================
# determine/refine cpu info (nr of cpus in NRCPUS + frequency in CPUFREQ)
# ======================================================================
# nothing so far.
