#! /bin/env tclsh

# Copyright (C) 2011-2012, Nathan Coulter and others 

#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 2 of the License.

#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.

#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

module tmkutil
#effect: a variable by the same name as this proc is set in its namespace
proc initDotTclDir {} {
	tcl_findLibrary tcl [info tclversion] [info patchlevel] init.tcl \
		TCL_LIBRARY val 
	if {[string length $val]} {
		return $val 
	}
}

proc initDotTclDir_autovar {name name2 op} {
	return [initDotTclDir]
}

proc tclConfigShPath {} {
	variable tclConfigShName
	variable initDotTclDir

	set maybe [file join [file dirname [info library]] $tclConfigShName]
	if {[file exists $maybe]} {
		variable tclConfigPath $maybe
		return $maybe
	}

	if {![isnull $initDotTclDir]} {
		set maybe [file join [file dirname $initDotTclDir] $tclConfigShName]
		if [file exists $maybe] {
			return $maybe
		}
	}

	if [info exists ::tcl_pkgPath] {
		set maybe [file join [lindex $::tcl_pkgPath 0] $tclConfigShName] 
		if [file exists $maybe] {
			return $maybe
		}
	}
}

proc tclConfigShPath_autovar {name name2 op} {
	return [tclConfigShPath]
}

#value: path to tcl shared library object (.so, .dll, etc)
proc libPath {} {
	variable pkgPath
	variable stubLibPath
	set places [list [file dirname $pkgPath] \
		[file dirname $stubLibPath] \
		[file dirname [info nameofexecutable]] \
		[glob -nocomplain -dir \
			[file dirname [file dirname [info nameofexecutable]]] lib*] \
	]
	set prefixes [list {} lib]
	set versions [info tclversion]
	lappend versions [string map {. {}} $versions]
	set suffixes [list .lib .dll .so .so.* .dylib ]
	foreach place ${places} {
		foreach prefix $prefixes {
			foreach version $versions {
				foreach suffix $suffixes {
					set namepattern ${prefix}tcl$version$suffix
					set files [glob -nocomplain -dir $place $namepattern]
					if [llength $files] {
						return [lindex $files 0]
					}
				}
			}
		}
	}
}

proc libPath_autovar {name name2 op} {
	return [libPath]
}

proc stubLibPath {} {
	variable pkgPath
	set res [glob -nocomplain -dir $pkgPath *tclstub* ]
	if {[llength $res]} {
		return [lindex $res 0]
	}
	return {}  
}

proc stubLibPath_autovar {name name2 op} {
	return [stubLibPath]
}

proc pkgPath {} {
	variable pkgPath
	variable initDotTclDir

	if [info exists ::tcl_pkgPath] {
		return [lindex $::tcl_pkgPath 0]
	}

	set res [file dirname [info library]]
	if {![isnull $res]} {
		return $res
	}

	if {![isnull $initDotTclDir]} {
		return [file dirname $initDotTclDir]
	}

	#check directories first of symlink, then of target 
	foreach dummyname [list "" __dummy__] {
		set maybe [file dirname [file dirname [file dirname \
			[file normalize [file join [info nameofexecutable] __dummy__]]]]]
		if {![isnull $maybe]} {
			set tcldir tcl[info tclversion]
			foreach dir [glob [file join $maybe *]] {
				set maybe [file join $maybe $dir $tcldir init.tcl]
				if [file exists $maybe] {
					return [file dirname $maybe]
				}
			}
		}
	}

	#$env(TCLLIBPATH) should be in auto_path
	foreach maybe $::auto_path {
		set maybe [file join $maybe tcl[info tclversion]]
		if [file exists $maybe] {
			return [file dirname $maybe]
		}
	}
}

proc pkgPath_autovar {name name2 op} {
	return [pkgPath]
}

#variable tclsh tclsh
variable tclsh [info nameofexecutable]
variable pkgPath
trace add variable pkgPath read autovar
variable tclConfigShName tclConfig.sh
variable tclConfigShPath
trace add variable tclConfigShPath read autovar
variable libPath
trace add variable libPath read autovar
variable stubLibPath
trace add variable stubLibPath read autovar
variable initDotTclir 
trace add variable initDotTclDir read autovar

