.POSIX:

export CC CFLAGS CPPFLAGS LDFLAGS LIBS TCL TCLTK_CPPFLAGS TCLTK_LIBS

Memchan_targets = ../inst/Memchan/pkgIndex.tcl
tclvfs_targets = ../inst/tclvfs/pkgIndex.tcl
tclcfive_targets = ../inst/tclcfive/pkgIndex.tcl
critcl_targets = lib/tcl/critcl

$(SHLIB): $(tclcfive_targets)

##insert at front of stack (in reverse order)
#LDFLAGS = -L../../stdioctcl/stdioctcl/build -Wl,-rpath,$ORIGIN/../lib $(LDFLAGS)
#LDFLAGS = -L../../stdioctcl/stdioctcl/build -Wl,-rpath,$ORIGIN $(LDFLAGS)


FIND_R_TCLSH = library(tcltk); \
cat(tclvalue(.Tcl(" \
if {[info exists env(R_TCLSH)]} { \
	return [set env(R_TCLSH)] ;\
} ;\
set tclbindir {} ;\
catch {set tclbindir [file join [set env(R_HOME)] Tcl bin]} ;\
if {[set tclbindir] ne {}} { \
	set rtclsh [lindex [glob -nocomplain -dir [set tclbindir] tclsh*] 0] ;\
	if {[set rtclsh] ne {}} { \
		return [set rtclsh] ;\
	} ;\
} ;\
set tclbindir {} ;\
catch {set tclbindir [file join [file dirname [file dirname [info library]]] bin]} ;\
if {[set tclbindir] ne {}} { ;\
	set rtclsh [file join [set tclbindir] tclsh] ;\
	if {[set rtclsh] ne {} && [file exists [set rtclsh]]} { \
		return [set rtclsh] ;\
	} ;\
} ;\
")))

$(tclcfive_targets): libcfive.a $(tclvfs_targets)
	cd tclcfive ;\
	TMK_TCLSH=`$(R_HOME)/bin/$(R_ARCH_BIN)/Rscript -e '$(FIND_R_TCLSH)'` ;\
	CPPFLAGS="-I../../cfive/cfive $(TCLTK_CPPFLAGS) $$CPPFLAGS" ;\
	LDFLAGS="-L.. -L../.. $$LDFLAGS" ;\
	LIBS="$(TCLTK_LIBS) $$LIBS" ;\
	export TCLLIBPATH ;\
	TCLLIBPATH=`pwd`/../lib/tcl ;\
	"$$TMK_TCLSH" support/tmk/src/tmk -reconfig ;\
	"$$TMK_TCLSH" support/tmk/src/tmk
	cp -fp tclcfive/tclcfive/build/libtclcfive$(DYLIB_EXT) ../inst/tclcfive
	cp -fp tclcfive/tclcfive/cfive.tcl ../inst/tclcfive
	cp -fp tclcfive/tclcfive/inmemvfs.tcl ../inst/tclcfive
	cp -fp tclcfive/tclcfive/pkgIndex.tcl ../inst/tclcfive
	rm -f ../inst/tclcfive/empty

$(tclvfs_targets): $(Memchan_targets) 
	cd tclvfs ;\
	CPPFLAGS="$(TCLTK_CPPFLAGS) $$CPPFLAGS" ;\
	TMK_TCLSH=`$(R_HOME)/bin/$(R_ARCH_BIN)/Rscript -e '$(FIND_R_TCLSH)'` ;\
	LIBS="$(TCLTK_LIBS) $$LIBS" ;\
	export TCLLIBPATH ;\
	TCLLIBPATH=`pwd`/../lib/tcl ;\
	"$$TMK_TCLSH" ../stdioctcl/support/tmk/src/tmk -reconfig ;\
	"$$TMK_TCLSH" ../stdioctcl/support/tmk/src/tmk
	cp -f tclvfs/generic/build/libvfs1.3$(DYLIB_EXT) ../inst/tclvfs
	for fname in tclvfs/library/*.tcl; do cp -rfp "$$fname" ../inst/tclvfs; done
	#now overwrite pkgIndex.tcl.
	cp -f tclvfs/pkgIndex.tcl ../inst/tclvfs
	cp -f tclvfs/library/tclIndex ../inst/tclvfs
	cp -rfp tclvfs/library/template ../inst/tclvfs
	rm -f ../inst/tclvfs/empty


$(Memchan_targets): $(critcl_targets)
	cd Memchan ;\
	CPPFLAGS="-I. -I.. $(TCLTK_CPPFLAGS) $$CPPFLAGS" ;\
	LIBS="$(TCLTK_LIBS) $$LIBS" ;\
	TMK_TCLSH=`$(R_HOME)/bin/$(R_ARCH_BIN)/Rscript -e '$(FIND_R_TCLSH)'` ;\
	"$$TMK_TCLSH" ../stdioctcl/support/tmk/src/tmk -reconfig ;\
	"$$TMK_TCLSH" ../stdioctcl/support/tmk/src/tmk
	cp -f Memchan/pkgIndex.tcl ../inst/Memchan
	cp -f Memchan/generic/build/libMemchan2.3$(DYLIB_EXT) ../inst/Memchan
	rm -f ../inst/Memchan/empty

$(critcl_targets):
	cd critcl ;\
	CPPFLAGS="-I. -I.. $(TCLTK_CPPFLAGS) $$CPPFLAGS" ;\
	LIBS="$(TCLTK_LIBS) $$LIBS" ;\
	TMK_TCLSH=`$(R_HOME)/bin/$(R_ARCH_BIN)/Rscript -e '$(FIND_R_TCLSH)'` ;\
	"$$TMK_TCLSH" build.tcl install ../lib/tcl 


libcfive.a: libstdioctcl.a $(critcl_targets)
	cd cfive ;\
	CPPFLAGS="-I../stdioctcl/include -I../../stdioctcl/include -I../../../stdioctcl/include $(TCLTK_CPPFLAGS) $$CPPFLAGS" ;\
	LDFLAGS="-L../../stdioctcl/stdioctcl/build $$LDFLAGS" ;\
	LIBS="$(TCLTK_LIBS) $$LIBS" ;\
	TMK_TCLSH=`$(R_HOME)/bin/$(R_ARCH_BIN)/Rscript -e '$(FIND_R_TCLSH)'` ;\
	"$$TMK_TCLSH" support/tmk/src/tmk -reconfig ;\
	"$$TMK_TCLSH" support/tmk/src/tmk -D USE_STDIOCTCL_REDEFINE
	#cp -fp cfive/cfive/build/libcfive$(DYLIB_EXT) . 
	cp -fp cfive/cfive/build/libcfive.a . 


libstdioctcl.a: $(critcl_targets)
	cd stdioctcl ;\
	CPPFLAGS="$(TCLTK_CPPFLAGS) $$CPPFLAGS" ;\
	LIBS="$(TCLTK_LIBS) $$LIBS" ;\
	export TCLLIBPATH ;\
	TCLLIBPATH=`pwd`/../lib/tcl ;\
	TMK_TCLSH=`$(R_HOME)/bin/$(R_ARCH_BIN)/Rscript -e '$(FIND_R_TCLSH)'` ;\
	"$$TMK_TCLSH" support/tmk/src/tmk -reconfig ;\
	"$$TMK_TCLSH" support/tmk/src/tmk
	#cp -fp stdioctcl/stdioctcl/build/libstdioctcl$(DYLIB_EXT) .
	cp -fp stdioctcl/stdioctcl/build/libstdioctcl.a .


