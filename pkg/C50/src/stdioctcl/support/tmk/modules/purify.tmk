# ===========================================================================
# $Id: purify.tmk,v 1.6 2000/10/12 07:23:36 htschirm Exp $
# add purify to the command line for linking the exectuable 
# ===========================================================================
# $Log: purify.tmk,v $
# Revision 1.6  2000/10/12 07:23:36  htschirm
# added compiler init function
#
# Revision 1.5  2000/08/18 13:27:04  ag4-adm
# fixed namespace
#
# Revision 1.4  2000/08/10 15:05:45  htschirm
# Windows/cygwin port
#
# Revision 1.3  2000/08/10 08:21:13  ag4-adm
# fixed for tmk0.9x
#
# Revision 1.2  2000/05/05 08:22:44  htschirm
# *** empty log message ***
#
# ===========================================================================

ifdef PURIFY {} {
    variable PURIFY [exec which purify]
}

eval_later {

    # we can use purify for the c and/or cxx module(s)
    if {![lcontains $MODULES cxx] && ![lcontains $MODULES c]} {
      puts stderr "warning: purify requires the 'c' or 'cxx' module(s)"
    }
    
    # add purify to the command line, but just for linking the executable
    set ex_body {
	exception $link::PROGRAMS {LANG::${LANG::COMPILER}::EXECUTABLE} {
	    eval set exec \$\{LANG::${LANG::COMPILER}::EXECUTABLE\}
	    if {![lcontains $exec [file tail $purify::PURIFY]]} {
		puts stderr "*********** using purify for $TARGET"
		set newcmd [file nativename $purify::PURIFY]
		lappend newcmd [file nativename $exec]
		set LANG::${LANG::COMPILER}::EXECUTABLE $newcmd
	    }
	}
    }

    # apply this exception for c and cxx
    foreach LANG {c cxx} {
	regsub -all LANG $ex_body $LANG tmp
	eval $tmp
    }
    
}

