# ========================================================================
# $Id: cgi.tmk,v 1.3 2000/07/20 16:15:56 htschirm Exp $
# module for writing and maintaining html/cgi documents using tmk
# ========================================================================
# $Log: cgi.tmk,v $
# Revision 1.3  2000/07/20 16:15:56  htschirm
# towards tmk release 0.9
#
# Revision 1.2  2000/04/27 12:04:45  htschirm
# eval_later <- beforeBuilding
#
# Revision 1.1  2000/04/25 13:25:47  brabec
# added cgi.tmk
#
# ========================================================================


if [info exists ::tmk::ContribDir] {
    if [file readable "${::tmk::ContribDir}/cgi/cgi.tcl"] {
	source "${::tmk::ContribDir}/cgi/cgi.tcl"
    } else {
	exit_msg "missing cgi.tcl (usually in ${::tmk::ContribDir}/cgi/cgi.tcl)"
    }
} else {
    exit_msg "::tmk::ContribDir unset (cannot find cgi.tcl)"
}

set __CGITCL_outfile stdout

proc cgi_puts {args} {
    global __CGITCL_outfile 
    set opt ""
    set str ""
    foreach i $args {
	if { [string range $i 0 0] == "-" } {
	    set opt $opt$i
	} else {
	    set str $str$i
	}
    }
    if { $opt != "" } {
	puts $opt $__CGITCL_outfile $str 
    } else {
	puts $__CGITCL_outfile $str
    }
}

target *.html {$ROOT.htcl} {
    global __CGITCL_outfile
    if [catch { set __CGITCL_outfile [open $TARGET "w"] } ] {
	exit_msg "cannot open $TARGET for writing."
    }
    log_msg "doing $SRC -> $TARGET"
    source $SRC
    close $__CGITCL_outfile
    set __CGITCL_outfile stdout
}
    
eval_later {
    build [lmap [glob  -nocomplain *.htcl] {$IROOT.html}]
}
