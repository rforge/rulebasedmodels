# where to find the centrally compiled shared projects
config set PROJ_LOCATIONS [list /proj/mpi/shared_proj]

# skip GMU/f2c
config set ::MAKE_NO_F2C 1

# this is a pseudo module that will load the actual windowing system
namespace eval gui {
  config set DEPEND x11
}

namespace eval x11 {
  config set LIBS {Xext Xmu Xt Xi X11}
  config set INCPATH /usr/X11R6/include
  config set LIBPATH /usr/X11R6/lib
}

namespace eval opengl {
  config set DEPEND x11
  config set LIBS {GL GLU}
}

namespace eval glut {
  config set DEPEND opengl
  config set LIBS {glut}
}

namespace eval math {
  config set LIBS {m}
}

# thread library
namespace eval pthread {
    config set LIBS {pthread}
}

# misc
config set zlib::LIBS z
config set tiff::LIBS tiff
config set png::LIBS  png



# find all installed qt and qgl versions; always use multi-threaded lib
foreach x [glob /soft/common/software/qt-*] {
  set version [string range [file tail $x] 3 end]
  config set ::qt::${version}::DIR $x
  if [file exists $x/lib/libqt-mt.so] {
	config set ::qt::${version}::LIBS {qt-mt}
  } else {
	config set ::qt::${version}::LIBS {qt}
  }
  config set ::qgl::${version}::DEPEND [list qt::$version opengl]
}

# old qt had its own qgl library
config set qgl::2.00::LIBS {qgl}
# default versions
config set qt::DEFAULT_VERSION 2.2.2
config set qgl::DEFAULT_VERSION 2.2.2
# sometimes 'qt-mt' is requested explicitly
set qtd qt::${qt::DEFAULT_VERSION}::DIR
config set qt::mt::DIR [set $qtd]
config set qt::mt::LIBS {qt-mt}
# define clean namespace to avoid naming conflicts
config set qt::DEFS {QT_CLEAN_NAMESPACE}

# stable version of firewire lib l1394
namespace eval l1394 {
    config set INCPATH /home/repplix/include/stable/
    config set LIBPATH /home/repplix/lib
    config set LIBS    {l1394_stable raw1394}
    config set DEPEND  {pthread}

    namespace eval 08 {
	config set INCPATH {/proj/mpi/l1394_image08/l1394 /proj/mpi}
	config set LIBPATH {/proj/mpi/l1394_image08/l1394 /proj/mpi/libraw1394}
	config set LIBS    {l1394 raw1394}
	config set DEPEND  {x11 pthread}
    }
}

# Intel's image processing library
namespace eval ipl {
    config set INCPATH /soft/common/software/ImageProcessingLib/include
    config set LIBPATH /soft/common/software/ImageProcessingLib/lib
    config set LIBS    {ipla6}
    # also available: iplm6 and iplpx
}

# Intel's open source computer vision library
namespace eval opencv {
    config set INCPATH /soft/common/software/OpenCV/include
    config set LIBPATH /soft/common/software/OpenCV/lib
    config set LIBS    {opencv}
    config set DEPEND  {ipl}

}

# vector + matrix library meschach
namespace eval meschach {
    config set INCPATH /proj/mpi/pckg/meschach
    config set LIBPATH /proj/mpi/pckg/meschach/Debian2.2_max
    config set LIBS    {meschach}
}


# don't use glx in Marc's programs
config set APP_NO_GLX 1

# always use thread support in multi-processor Linux environment
config set ::USE_PTHREADS 1


# Ingo's pgcc compiler
config set cxx::pgcc::EXECUTABLE /home/wald/pub/usr/local/pgcc/bin/g++ 
config set cxx::pgcc::AR         /home/wald/pub/usr/local/pgcc/bin/ar
config set env(PATH) $env(PATH):/home/wald/pub/usr/local/pgcc/lib/gcc-lib/i686-pc-linux-gnu/pgcc-2.95.2



# assembly language compiler
config set asm::ASM /proj/mpi/pckg/nasm-0.98/nasm
config set asm::FLAGS -felf
