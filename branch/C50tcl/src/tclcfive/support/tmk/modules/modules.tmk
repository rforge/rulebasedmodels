# -*-Mode: tcl -*-
# ===========================================================================
# $Id: modules.tmk,v 1.3 2000/04/22 16:23:36 htschirm Exp $
# tmk support for the Silicon Graphics / Cray modules environment scripts
# ===========================================================================
# $Log: modules.tmk,v $
# Revision 1.3  2000/04/22 16:23:36  htschirm
# new names for user-visible function
#
# Revision 1.2  2000/04/20 11:38:01  htschirm
# lots of new names
#
# Revision 1.1  2000/01/04 22:35:31  ag4-adm
# added support for the strange SGI/Cray "modules" stuff
#
# ===========================================================================

set env(MODULESHOME)   /opt/modules/modules
set env(MODULESPATH)   /opt/modulefiles:/opt/modules/modules/modulefiles
set env(LOADEDMODULES) {}

# trivially emulate some module functions
proc module-info args {
    return 0
}
proc uname args {
    return 0
}

# some more important functions
proc module_load modname {
    global env
    set paths [split $env(MODULESPATH) :]
    set files [find_in_pathlist $modname $paths]
   if [llength $files] {
       set file [lindex $files 0]
       assert {[file readable $file]}	
	dbg_msg "executing module $file"
	uplevel \#0 source $file
    } else {
	exit_msg "module $modname not found in \[$paths\]\n  -> check env(MODULESPATH)"
	
    }
}
proc setenv {varname value} {
    global env

    set env($varname) $value
}
proc prepend-path {varname value} {

    global env

    if [info exists env($varname)] {
	set env($varname) ${value}:$env($varname)
    } else {
	set env($varname) $value
    }

}
proc append-path {varname value} {

    global env

    if [info exists env($varname)] {
	set env($varname) $env($varname):${value}
    } else {
	set env($varname) $value
    }

}
